Please answer the below core-java Questions:

What is programing language?
A.
What jdk contains or composed of and define each components?
Answer: Components of JDK:
1. The Runtime Interpreter: The Java runtime interpreter (java) is a stand-alone version of the Java interpreter built into the HotJava browser. The runtime interpreter provides the support to run Java executable programs in compiled, bytecode format.
2. The Compiler: The Java compiler (javac) is used to compile Java source code files into executable Java bytecode classes. In Java, source code files have the extension .java.
3. The Applet Viewer: The applet viewer is a tool that serves as a minimal test bed for final release Java applets. You can use the applet viewer to test your programs instead of having to wait for HotJava to support the final release of Java.
4. The Debugger: Debugger does the job of debugging the a piece of code.
5. The Class File Disassembler: Disassembles class files.
6. The Header and Stub File Generator: Generates  header and source files that are needed to implement native methods.
7. The Documentation Generator: Generates HTML pages of API documentation from Java source files.
What is IDE?
Answer: An IDE stands Integrated Development Environment is a software suite that consolidates the
basic tools developers need to write and test software. Typically, an IDE contains a code editor, a
compiler or interpreter and a debugger that the developer accesses through a single graphical user interface (GUI).
What are the IDEs available in the market to support java?
Explain the entire java life cycle.
what is class?
Answer: Class is a blueprint from which individual objects are created. Classes have data and methods, data represents state and methods behavior. Class is just a logical framework. So, a class is a template for an object and object is an instance of a class
What is object?
Answer: Object is an instance of the class and Object is the physical reality.
What is the entry point of an application?
Answer: Main method is the entry point of an application.
Why main is static?
Answer: In order to call a method need to have a object of that method. As main method is gateway to the java application JVM need to enter into main method in order to execute. Static key word let JVM to call main method without  object.
Which class is the superclass of all classes?
What is difference between path and classpath variables?
What is the difference between an Interface and Abstract class?
Answer:  A class that contains one or more abstract methods, and therefore can never be instantiated. Abstract classes are defined so that other classes can extend them and make them concrete by implementing the abstract methods. An interface in the Java programming language is an abstract type that is used to specify a behaviour that classes must implement. Interfaces are declared using the interface keyword, and may only contain method signature and constant declarations(variable declarations that are declared to be both static and final).
Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
what is Access Specifier?
Answer: Access Specifier is to determine the visibility of methods and variables.
What is OOP ? Define each feature of java OOP.
Answer: OOP stands for "Object-Oriented Programming." Refers to a programming methodology based on objects, instead of just functions and procedures. These objects are organized into classes, which allow individual objects to be group together.
Features of java OOP:
1. Encapsulation
2. Inheritance
3. Polymorphism
4. Abstraction
1. Encapsulation: Encapsulation means data hiding. By doing encapsulation data can only be be accessed by public methods.  There are various way to hide the data. By making a method, variable private access limits to the class user. By using getter and setter method private data can be accessed, hiding implementation of methods and data from user is called encapsulation. from the users. It improves maintainability and flexibility and re-usability. The fields can be made read-only User would not be knowing what is going on behind the scene. They would only be knowing that to update a field call set method and to read a field call get method but what these set and get methods are doing is purely hidden from them.
2. Inheritance: Inheritance refers to a feature of Java programming that lets you create classes that are derived from other classes. A class that's based on another class inherits the other class. The class that is inherited is the parent class, the base class, or the superclass
3. Polymorphism: Polymorphism is the ability of an object to take on many forms. The most common use of polymorphism in OOP occurs when a parent class reference is used to refer to a child class object. Any Java object that can pass more than one IS-A test is considered to be polymorphic. Polymorphism in Java has two types:
a. Compile time polymorphism (static binding):It happens during compile time. Example: Method overloading is an example of static polymorphism,
b. Runtime polymorphism (dynamic binding): It happens during run time. Example: Method overriding is an example of dynamic polymorphism.
4. Abstraction: Abstraction in Java or Object oriented programming is a way to segregate implementation from an interface and one of the five fundamentals along with Encapsulation, Inheritance, Polymorphism, Class, and Object.  Abstraction in Java is achieved by  using interface and abstract class in Java. An interface or abstract class is something which is not concrete , something which is incomplete. In order to use interface or abstract class, we need to extend and implement an abstract method with concrete behavior.
What is Java Package and which package is imported by default?
What is API? Name list of API that you have used so far.
Answer: An application program interface (API) is a set of routines, protocols, and tools for building software applications. Basically, an API specifies how software components should interact. Additionally, APIs are used when programming graphical user interface (GUI) components. A good API makes it easier to develop a program by providing all the building blocks. A programmer then puts the blocks together.
Does java support multiple inheritance, explain why or why not?
Answer: No
What is method overloading and when it happens?
Answer: When same method takes different signature it is called method overloading it happen within class.
Explain exceptions in java and how to handle it.
What is static keyword in java? How it has been used in variables and methods ?
What is final and how it has been used variables and methods?
Answer: A final class cannot be subclassed. A final variable can only be initialized once. A final method cannot be overridden by subclasses.
What is final, finally and finalize?
Answer: Final: Final variables are nothing but constants. We cannot change the value of a final variable once it is initialized. A final method cannot be overridden. Which means even though a sub class can call the final method of parent class without any issues but it cannot override it.
Finally: Finally key word used to execute finally block when the try and catch block exits which ensures that the finally block is executed even if an unexpected exception occurs.
Finalize(): Called by the garbage collector on an object when garbage collection determines that there are no more references to the object.
What is a constructor ?
Answer: Constructor is being used to instantiate a object by using new operator. It is an instance method with the same name of their class.
Can we have multiple constructors in a class?
Answer: If we don't have a constructor declared, what is called during the object creation?
What is "this" keyword in java ?
Answer: this key word represents instance of the class. this can be used to access class methods and variables.
What is "super" keyword in java? How many possible way can you use?
What is JVM stand for ?
Answer: Java Virtual Machine
Is JVM platform independent?
What version of java are you using?
What is JAR stand for ?
Answer: Java Archive is a platform independent file format that holds many files into one. Multiple applets written in the Java Programming language and their components like .class files, images, sounds and other resource files can be bundled in a JAR file and downloadable in a single HTTP transaction. It supports file compression and digital signatures.
What is the difference between JDK and JVM?
Answer: JDK: It's the full featured Software Development Kit for Java, including JRE, and the compilers and tools (like JavaDoc, and Java Debugger) to create and compile programs.
The Java Virtual machine (JVM) is the virtual machine that run the Java bytecodes.
The JVM doesn't understand Java typo, that's why you compile your *.java files to obtain *.class files that contain the bytecodes understandable by the JVM. It's also the entity that allows Java to be a "portable language" (write once, run anywhere). Indeed there are specific implementations of the JVM for different systems (Windows, Linux, MacOS, see the wikipedia list..), the aim is that with the same bytecodes they all give the same results.

What is the difference between JVM and JRE?
What is compile time and run time?
Answer: Java compile the .java file to .class file, this stage is called compile time. java loader loads the .class file in JVM and JVM executes the application. This execution time of a application is called run time.
What is heap?
Answer: The heap is the run-time data area from which memory for all class instances and arrays is allocated. Heap is the place where all objects stays during run time. It is part of RAM.
How java manage it's memory?
Answer: All the primitive variables and reference variable stays in stack. Heap contains the objects. Main methods executes on stack. during the process of execution when a object lost his reference variable which is being erased from the stack after completion of execution is waits for the Java automatic garbage collector, and object without no reference variable being removed from heap by garbage collector.
What is the difference between String, StringBuffer and StringBuilder?
What is Singleton class?
Answer: The purpose of singleton is to control object creation by keeping private constructor. Singleton pattern helps us to keep only one instance of a class at any time.We can make constructor as private. So that user can not create an object from outside of the class.
What is Serialization and Deserialization?
Answer: Serialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. Deserialization is the reverse process of creating object from sequence of bytes is called deserialization.
when to use transient variable in java?
Difference between while and do..while loop?
What is Enum?
Answer: Enum is short abbreviated for Enumerations in java serve the purpose of representing a group of named constants in a programming language.
What is Iterator?
Answer: An iterator is an object that represents a stream of data. Iterator takes the place of Enumeration in the Java collections framework. Iterators differ from Enumerations in two ways:
Iterators allow the caller to remove elements from the underlying collection during the iteration with well-defined semantics. Method names have been improved.
Which one will take more memory, an int or Integer?
Why is String Immutable in Java?
Answer: Security: parameters are typically represented as String in network connections, database connection urls, usernames/passwords etc. If it were mutable, these parameters could be easily changed. Synchronization and concurrency: making String immutable automatically makes them thread safe thereby solving the synchronization issues. Caching: when compiler optimizes your String objects, it sees that if two objects have same value (a="test", and b="test") and thus you need only one string object (for both a and b, these two will point to the same object). Class loading: String is used as arguments for class loading. If mutable, it could result in wrong class being loaded (because mutable objects change their state).
What is constructor chaining in Java?
Answer: Constructor chaining is the process of calling one constructor from another constructor with respect to current object. Constructor chaining can be done in two ways: Within same class: It can be done using this() keyword for constructors in same class From base class: by using super() keyword to call constructor from the base class. Constructor chaining occurs through inheritance.
The difference between Serial and Parallel Garbage Collector?
What is JIT stands for?
Answer: The Just-In-Time (JIT) compiler is a component of the Java™ Runtime Environment that improves the performance of Java applications at run time. The JIT compiler helps improve the performance of Java programs by compiling bytecodes into native machine code at run time. The JIT compiler is enabled by default, and is activated when a Java method is called.
Explain Java Heap space and Garbage collection?
Answer: Heap space: At run-time the Java instances are stored in the heap memory area. When an object is not referenced anymore it becomes eligible for removal from heap memory.During garbage collection process, those objects are removed from heap memory and the space is reclaimed. Heap memory has three major areas
1. Young Generation
    a. Eden Space (any instance enters the runtime memory area through eden)
    b. S0 Survivor Space (older instances moved from eden to S0)
    c. S1 Survivor Space (older instances moved from S0 to S1)
2. Old Generation (instances promoted from S1 to tenured)
3. Permanent Generation (contains meta information like class, method detail)
Can you guarantee the garbage collection process?
Answer: No it is not guaranteed process. Reason is as follows~ Being an automatic process, programmers need not initiate the garbage collection process explicitly in the code. System.gc() and Runtime.gc() are hooks to request the JVM to initiate the garbage collection process. Though this request mechanism provides an opportunity for the programmer to initiate the process but the onus is on the JVM. It can choose to reject the request and so it is not guaranteed that these calls will do the garbage collection. This decision is taken by the JVM based on the eden space availability in heap memory. The JVM specification leaves this choice to the implementation and so these details are implementation specific. Undoubtedly we know that the garbage collection process cannot be forced.
What is the difference between stack and heap in Java?
Answer: Heap and Stack are part of JVM but they are used for different purposes.
Differences are as follows:
1. Size: Heap space in Java is much bigger than the Stack memory.
2. Resizing: JVM allows to resize both heap and stack, but need to use different JVM flags for that.
3. Usage: Heap memory is used to store objects, no mater where u created that object. Stack memory is used to store primitive variables and reference variables, method frames and call stack.
4. Visibility: Heap memory is shared by all threads hence it is also known as the main memory but stack memory is local to threads and local variable created there was not visible to others.
5. Order: Heap is a large memory area where objects can be created and stored in any order but Stack memory is structured as Stack data structure i.e. LIFO where method calls are stored as last in first out order.
6. Error Type: When heap and stack memory are filled different error are being generated.
What is reflection in java and why is it useful?
what is multithreading in java?
What is the use of synchronization in Java?
What is Framework?
What are the testing Framework available in java?
Difference between jUnit and testNG?
What are the dependencies for this project?
what is dependency injection in java?
What is static binding and dynamic binding?









